{"ast":null,"code":"var _jsxFileName = \"/home/doara/Documentos/uns_codigos/JS/ReactJS/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      password: '',\n      confirm_password: '',\n      email: '',\n      verify: true\n    };\n    this.updateStateName = this.updateStateName.bind(this);\n    this.updateStatePassword = this.updateStatePassword.bind(this);\n    this.updateStatePasswordConfirm = this.updateStatePasswordConfirm.bind(this);\n    this.updateStateEmail = this.updateStateEmail.bind(this);\n    this.verifyButton = this.verifyButton.bind(this);\n  }\n\n  updateStateName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  updateStatePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  updateStatePasswordConfirm(e) {\n    this.setState({\n      confirm_password: e.target.value\n    });\n  }\n\n  updateStateEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  verifyButton(e) {\n    this.setState({\n      verify: e.target.value\n    });\n\n    if (this.state.verify == true) {\n      alert(\"Confirmado!\");\n    } else {\n      alert(\"Há campos fora do padrão, por favor verifique.\");\n      this.updateStateName(e);\n      this.updateStateEmail(e);\n      this.updateStatePasswordConfirm(e);\n      this.updateStatePassword(e);\n    }\n  }\n\n  render() {\n    let name_empty = '';\n    let password_empty = '';\n    let confirm_password_empty = '';\n    let email_empty = '';\n    var name = true;\n    var email = true;\n    var password = true;\n    var confirm_password = true;\n\n    if (this.state.name == '') {\n      name_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Nome n\\xE3o pode estar vazio\");\n      name = false;\n    } else {\n      name = true;\n    }\n\n    if (this.state.email == '') {\n      email_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Email n\\xE3o pode estar vazio\");\n      email = false;\n    } else if (this.state.email.includes(\"@\") != true) {\n      email_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Email n\\xE3o cont\\xEAm @\");\n      email = false;\n    } else if (this.state.email.includes(\".com\") != true) {\n      email_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Email n\\xE3o cont\\xEAm .com\");\n      email = false;\n    } else {\n      email = true;\n    }\n\n    if (this.state.password == '') {\n      password_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Senha n\\xE3o pode estar vazio\");\n      password = false;\n    } else if (this.state.password.length < 8) {\n      password_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Senha n\\xE3o pode ter menos de 8 caracteres\");\n      password = false;\n    } else {\n      password = true;\n    }\n\n    if (this.state.confirm_password == '') {\n      confirm_password_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Confirmar senha n\\xE3o pode estar vazio\");\n      confirm_password = false;\n    } else if (this.state.confirm_password.length < 8) {\n      confirm_password_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Confirmar senha n\\xE3o pode ter menos de 8 caracteres\");\n      confirm_password = false;\n    } else if (this.state.password != this.state.confirm_password) {\n      confirm_password_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Senhas incompat\\xEDveis\");\n      confirm_password = false;\n    } else {\n      confirm_password = true;\n    }\n\n    if (name == false || email == false || password == false || confirm_password == false) {\n      this.state.verify = false;\n    } else {\n      this.state.verify = true;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Hello World\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Nome: \"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.updateStateName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), name_empty, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Email: \"), React.createElement(\"input\", {\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.updateStateEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), email_empty, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Senha: \"), React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.updateStatePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), password_empty, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Confirmar Senha: \"), React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.confirm_password,\n      onChange: this.updateStatePasswordConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), confirm_password_empty, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.verifyButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Confirmar campos\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/doara/Documentos/uns_codigos/JS/ReactJS/my-app/src/App.js"],"names":["React","Component","App","constructor","props","state","name","password","confirm_password","email","verify","updateStateName","bind","updateStatePassword","updateStatePasswordConfirm","updateStateEmail","verifyButton","e","setState","target","value","alert","render","name_empty","password_empty","confirm_password_empty","email_empty","includes","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n      \n    this.state = {\n      name: '',\n      password: '',\n      confirm_password: '',\n      email: '',\n      verify: true\n    }\n    this.updateStateName = this.updateStateName.bind(this);\n    this.updateStatePassword = this.updateStatePassword.bind(this);\n    this.updateStatePasswordConfirm = this.updateStatePasswordConfirm.bind(this);\n    this.updateStateEmail = this.updateStateEmail.bind(this);\n    this.verifyButton = this.verifyButton.bind(this);\n  };\n  updateStateName(e) {\n    this.setState({name: e.target.value});\n  }\n  updateStatePassword(e) {\n    this.setState({password: e.target.value});\n  }\n  updateStatePasswordConfirm(e) {\n    this.setState({confirm_password: e.target.value});\n  }\n  updateStateEmail(e) {\n    this.setState({email: e.target.value});\n  }\n\n  verifyButton(e) {\n    this.setState({verify: e.target.value});\n    if(this.state.verify == true){\n      alert(\"Confirmado!\");\n    }else{\n      alert(\"Há campos fora do padrão, por favor verifique.\");\n      this.updateStateName(e);\n      this.updateStateEmail(e);\n      this.updateStatePasswordConfirm(e);\n      this.updateStatePassword(e);\n    }\n  }\n\n  render(){\n    let name_empty = '';\n    let password_empty = '';\n    let confirm_password_empty = '';\n    let email_empty = '';\n    var name = true;\n    var email = true;\n    var password = true;\n    var confirm_password = true;\n\n    if (this.state.name == '') {\n      name_empty = <h6>Nome não pode estar vazio</h6>;\n      name = false;\n    }else{\n      name = true;\n    }\n\n    if (this.state.email == '') {\n      email_empty = <h6>Email não pode estar vazio</h6>;\n      email = false;\n    }else if (this.state.email.includes(\"@\")!=true) {\n      email_empty = <h6>Email não contêm @</h6>;      \n      email = false;\n    }else if (this.state.email.includes(\".com\")!=true) {\n      email_empty = <h6>Email não contêm .com</h6>;      \n      email = false;\n    }else{\n      email = true;\n    }\n\n    if (this.state.password == '') {\n      password_empty = <h6>Senha não pode estar vazio</h6>;\n      password = false;\n    } else if(this.state.password.length<8){\n      password_empty = <h6>Senha não pode ter menos de 8 caracteres</h6>;\n      password = false;\n    }else{\n      password = true;\n    }\n\n    if (this.state.confirm_password == '') {\n      confirm_password_empty = <h6>Confirmar senha não pode estar vazio</h6>;\n      confirm_password = false;\n    }else if(this.state.confirm_password.length<8){\n      confirm_password_empty = <h6>Confirmar senha não pode ter menos de 8 caracteres</h6>;\n      confirm_password = false;\n    }else if(this.state.password != this.state.confirm_password){\n      confirm_password_empty = <h6>Senhas incompatíveis</h6>;\n      confirm_password = false;\n    }else{\n      confirm_password = true;\n    }\n\n    if(name==false || email==false || password==false || confirm_password==false){\n      this.state.verify = false;\n    }else{\n      this.state.verify = true;\n    }\n\n    return(\n      <div>\n        <h1>Hello World</h1>\n        <form>\n          <label>Nome: </label>\n          <input type = \"text\" value = {this.state.name} onChange = {this.updateStateName} />\n          {name_empty}<p></p>\n\n          <label>Email: </label>\n          <input type = \"email\" value = {this.state.email} \n             onChange = {this.updateStateEmail} />\n          {email_empty}<p></p>\n\n          <label>Senha: </label> \n          <input type = \"password\" value = {this.state.password} \n             onChange = {this.updateStatePassword} />\n          {password_empty}<p></p>\n\n          <label>Confirmar Senha: </label> \n          <input type = \"password\" value = {this.state.confirm_password} \n             onChange = {this.updateStatePasswordConfirm} />\n          {confirm_password_empty}<p></p>\n\n          <button onClick={this.verifyButton}>Confirmar campos</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}