{"ast":null,"code":"var _jsxFileName = \"/home/doara/Documentos/uns_codigos/JS/ReactJS/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      password: '',\n      confirm_password: ''\n    };\n    this.updateStateName = this.updateStateName.bind(this);\n    this.updateStatePassword = this.updateStatePassword.bind(this);\n    this.updateStatePasswordConfirm = this.updateStatePasswordConfirm.bind(this);\n  }\n\n  updateStateName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  updateStatePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  updateStatePasswordConfirm(e) {\n    this.setState({\n      confirm_password: e.target.value\n    });\n  }\n\n  render() {\n    let name_empty = '';\n    let password_empty = '';\n    let confirm_password_empty = '';\n\n    if (this.state.name == '') {\n      name_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Nome n\\xE3o pode estar vazio\");\n    } else {\n      name_empty = '';\n    }\n\n    if (this.state.password == '') {\n      password_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Senha n\\xE3o pode esta vazio\");\n    } else if (this.state.password.length < 8) {\n      password_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Senha n\\xE3o pode ter menos de 8 caracteres\");\n    } else {\n      password_empty = '';\n    }\n\n    if (this.state.confirm_password == '') {\n      confirm_password_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Confirmar senha n\\xE3o pode esta vazio\");\n    } else if (this.state.confirm_password.length < 8) {\n      confirm_password_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Confirmar senha n\\xE3o pode ter menos de 8 caracteres\");\n    } else if (this.state.password != this.state.confirm_password) {\n      confirm_password_empty = React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Senhas incompat\\xEDveis\");\n    } else {\n      confirm_password_empty = '';\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Hello World\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Nome: \"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.updateStateName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), name_empty, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Senha: \"), React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.updateStatePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), password_empty, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Confirmar Senha: \"), React.createElement(\"input\", {\n      type: \"password\",\n      value: this.state.confirm_password,\n      onChange: this.updateStatePasswordConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), confirm_password_empty, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/doara/Documentos/uns_codigos/JS/ReactJS/my-app/src/App.js"],"names":["React","Component","App","constructor","props","state","name","password","confirm_password","updateStateName","bind","updateStatePassword","updateStatePasswordConfirm","e","setState","target","value","render","name_empty","password_empty","confirm_password_empty","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      \n      this.state = {\n         name: '',\n         password: '',\n         confirm_password: ''\n      }\n      this.updateStateName = this.updateStateName.bind(this);\n      this.updateStatePassword = this.updateStatePassword.bind(this);\n      this.updateStatePasswordConfirm = this.updateStatePasswordConfirm.bind(this);\n   };\n   updateStateName(e) {\n      this.setState({name: e.target.value});\n   }\n   updateStatePassword(e) {\n      this.setState({password: e.target.value});\n   }\n   updateStatePasswordConfirm(e) {\n      this.setState({confirm_password: e.target.value});\n   }\n  render(){\n    let name_empty = '';\n    let password_empty = '';\n    let confirm_password_empty = '';\n\n    if (this.state.name == '') {\n      name_empty = <h6>Nome não pode estar vazio</h6>;\n    } else {\n      name_empty = '';\n    }\n\n    if (this.state.password == '') {\n      password_empty = <h6>Senha não pode esta vazio</h6>;\n    } else if(this.state.password.length<8){\n      password_empty = <h6>Senha não pode ter menos de 8 caracteres</h6>;\n    }else{\n      password_empty = '';\n    }\n\n    if (this.state.confirm_password == '') {\n      confirm_password_empty = <h6>Confirmar senha não pode esta vazio</h6>;\n    }else if(this.state.confirm_password.length<8){\n      confirm_password_empty = <h6>Confirmar senha não pode ter menos de 8 caracteres</h6>;\n    }else if(this.state.password != this.state.confirm_password){\n      confirm_password_empty = <h6>Senhas incompatíveis</h6>;\n    }else{\n      confirm_password_empty = '';\n    }\n\n    return(\n       <div>\n          <h1>Hello World</h1>\n          <form>\n            <label>Nome: </label>\n            <input type = \"text\" value = {this.state.name} \n               onChange = {this.updateStateName} />\n            {name_empty}<p></p>\n\n            <label>Senha: </label> \n            <input type = \"password\" value = {this.state.password} \n               onChange = {this.updateStatePassword} />\n            {password_empty}<p></p>\n\n            <label>Confirmar Senha: </label> \n            <input type = \"password\" value = {this.state.confirm_password} \n               onChange = {this.updateStatePasswordConfirm} />\n            {confirm_password_empty}<p></p>\n          </form>\n       </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}